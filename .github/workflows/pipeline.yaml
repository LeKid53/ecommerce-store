name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Connexion à Docker Hub (assurez-vous que les secrets DOCKER_USERNAME et DOCKER_PASSWORD sont configurés)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 4 : Build et push de l'image Docker pour le frontend
      - name: Build, tag, and push frontend Docker image to Docker Hub
        env:
          FRONTEND_IMAGE_NAME: lekid53/store
          IMAGE_TAG: latest
        run: |
          docker build -t $FRONTEND_IMAGE_NAME:$IMAGE_TAG .
          docker push $FRONTEND_IMAGE_NAME:$IMAGE_TAG

      # Étape 5 : Configuration AWS pour EKS (assurez-vous que les secrets AWS_ACCESS_KEY_ID et AWS_SECRET_ACCESS_KEY sont configurés)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      # Étape 6 : Mettre à jour la configuration du cluster EKS
      - name: Update kube config
        run: aws eks update-kubeconfig --name projet-master-eks --region af-south-1

      # Étape 7 : Créer ou mettre à jour le namespace et déployer les manifests
      - name: Create namespace if not exists
        run: |
          kubectl get namespace health-master-ns || kubectl create namespace health-master-ns
          kubectl config set-context --current --namespace=health-master-ns

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f production/store.yaml